[binaries]
c       = 'arm-none-eabi-gcc'
cpp     = 'arm-none-eabi-g++'
ld      = 'arm-none-eabi-ld'
ar      = 'arm-none-eabi-ar'
as      = 'arm-none-eabi-as'
size    = 'arm-none-eabi-size'
objdump = 'arm-none-eabi-objdump'
objcopy = 'arm-none-eabi-objcopy'
strip   = 'arm-none-eabi-strip'
gdb     = 'arm-none-eabi-gdb'

[properties]

c_args = [
    '-fdata-sections',
    '-ffast-math',
    '-ffunction-sections',
    '-fno-builtin',
    '-fno-unroll-loops',
    '-fomit-frame-pointer',
    '-ftree-vectorize',
    '-mcpu=cortex-m33',
    '-mthumb',
    '-mabi=aapcs',
    ]

cxx_args = [
    '-fdata-sections',
    '-ffast-math',
    '-ffreestanding',
    '-ffunction-sections',
    '-fno-builtin',
    '-fno-non-call-exceptions',
    '-fno-rtti',
    '-fno-unroll-loops',
    '-fomit-frame-pointer',
    '-ftree-vectoriz',
    '-mcpu=cortex-m33',
    '-mthumb',
    '-no-common',
    '-mabi=aapcs',
    ]

c_link_args = [
    '--specs=nano.specs',
    '--specs=nosys.specs',
    '-Wl,--gc-sections',
    '-mcpu=cortex-m33',
    '-mabi=aapcs',
    ]

cxx_link_args = [
    '--specs=nano.specs',
    '--specs=nosys.specs',
    '-Wl,--gc-sections',
    '-mcpu=cortex-m33',
    '-mabi=aapcs',
    ]

asm_flags = [
    '-mcpu=cortex-m33',
    '-mthumb',
    '-x assembler-with-cpp',
    ]

exe_linker_flags = [
    '-mcpu=cortex-m33',
    '-mthumb',
    '--specs=nano.specs',
    '--specs=nosys.specs',
    '-mcpu=cortex-m33',
    '-mabi=aapcs',
    ]

module_linker_flags = [
    '-mcpu=cortex-m33',
    '-mthumb',
    '-mabi=aapcs',
    ]

shared_linker_flags = [
    '-mthumb',
    '-mcpu=cortex-m33',
    '-mabi=aapcs',
    ]

[host_machine]
system     = 'none'
cpu_family = 'arm'
cpu        = 'cortex-m33'
endian     = 'little'

